---
layout: post
title:  "Darknet安装及使用"
date:   2019-05-06
categories: darknet 深度学习
---

本文主要记录自己安装Darknet过程。
## 1.Darknet介绍

<img src="https://img-blog.csdnimg.cn/20190506135225613.png"  alt="图片名称" />


[官网:](https://pjreddie.com/) https://pjreddie.com/
[Github:](https://github.com/pjreddie/darknet.git) https://github.com/pjreddie/darknet.git

Darknet是一个用C和CUDA编写的开源神经网络框架。它速度快，易于安装，并支持CPU和GPU计算。
博客1 [Darknet概述，并总结了其优点](https://blog.csdn.net/u010122972/article/details/83541978)
博客2 [目标检测：YOLOv3: 训练自己的数据](https://blog.csdn.net/lilai619/article/details/79695109)
Github1 [darknet深度学习框架源码分析：详细中文注释](https://github.com/hgpvision/darknet)

## 2.在linux下安装Darknet
下载源码：
```python
git clone https://github.com/pjreddie/darknet.git
cd darknet
```
修改Makefile，添加对GPU，CUDNN，OpenCV，OpenMP等的支持。
因为我的CUDA没有使用默认的路径，所以需要进行修改：
```python
vi Makefile
```
<img src="https://img-blog.csdnimg.cn/20190506141953931.png"  alt="图片名称" />

编译
```python
make
```
如果都已正确编译，请尝试运行
```python
./darknet
```
应该得到输出：
```python
usage: ./darknet <function>
```
大功告成，接下来就可以使用Darknet了。
## 3.使用Darknet目标检测
在cfg文件夹下包含了很多设置好的网络模型（类似caffe）。
接下来我们在官网中下载训练好YOLO权重文件（weights）：
[darknet权重文件](https://pjreddie.com/darknet/yolo/)

<img src="https://img-blog.csdnimg.cn/20190506143537857.png"  alt="图片名称" />

执行预测
```python
# -gpus 可以使用多个GPU， 
# -nogpu 不使用GPU
./darknet detect cfg/yolov3-spp.cfg yolov3-spp.weights data/dog.jpg -gpus 3,4
```
得到输出：

<img src="https://img-blog.csdnimg.cn/20190506161754688.png"  alt="输出" />

预测图像：

<img src="https://img-blog.csdnimg.cn/2019050615593930.jpg"  alt="预测图像" />
